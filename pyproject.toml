[tool.poetry]
name = "bplusplus"
version = "1.2.5"
description = "A simple method to create AI models for biodiversity, with collect and prepare pipeline"
authors = ["Titus Venverloo <tvenver@mit.edu>", "Deniz Aydemir <deniz@aydemir.us>", "Orlando Closs <orlandocloss@pm.me>", "Ase Hatveit <aase@mit.edu>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
requests = "2.25.1"
pandas = "2.1.4"
ultralytics = "8.3.173"
pyyaml = "6.0.1"
tqdm = "4.66.4"
prettytable = "3.7.0"
# Pillow with platform-specific compatibility
pillow = [
    # Windows - stable version
    {version = ">=10.0.0,<12.0.0", markers = "sys_platform == 'win32'"},
    # macOS - all versions support latest
    {version = ">=10.0.0,<12.0.0", markers = "sys_platform == 'darwin'"},
    # Linux - most flexible
    {version = ">=10.0.0,<12.0.0", markers = "sys_platform == 'linux'"}
]
# PyTorch with platform-specific compatibility to handle discontinued macOS Intel support
torch = [
    # Windows - stable version range
    {version = ">=2.0.0,<2.8.0", markers = "sys_platform == 'win32'"},
    # macOS Intel - DISCONTINUED after PyTorch 2.2.2, use last supported version
    {version = ">=2.2.0,<2.3.0", markers = "sys_platform == 'darwin' and platform_machine == 'x86_64'"},
    # macOS ARM64 - full support, broader range
    {version = ">=2.0.0,<2.8.0", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"},
    # Linux - most flexible, best wheel support
    {version = ">=2.0.0,<2.8.0", markers = "sys_platform == 'linux'"}
]
# Comprehensive environment markers for numpy compatibility across all platforms and architectures
# Note: pandas 2.1.4 requires numpy >=1.26.0, so we must respect that constraint
numpy = [
    # Windows (all architectures) - use exact version that works well with ultralytics
    {version = ">=1.26.0,<1.26.5", markers = "sys_platform == 'win32'"},
    # macOS ARM64 (Apple Silicon) - compatible with newer numpy
    {version = ">=1.26.0,<1.27.0", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"},
    # macOS x86_64 (Intel) - compatible with newer numpy
    {version = ">=1.26.0,<1.27.0", markers = "sys_platform == 'darwin' and platform_machine == 'x86_64'"},
    # Linux ARM64 (aarch64) - common in cloud/lab environments
    {version = ">=1.26.0,<1.27.0", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'"},
    # Linux x86_64 - most common lab/server environment
    {version = ">=1.26.0,<1.27.0", markers = "sys_platform == 'linux' and platform_machine == 'x86_64'"}
]
# Scikit-learn with platform-specific compatibility
scikit-learn = [
    # Windows - more conservative versions for stability
    {version = ">=1.3.0,<1.7.0", markers = "sys_platform == 'win32'"},
    # macOS ARM64 - optimized builds available
    {version = ">=1.4.0,<1.8.0", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"},
    # macOS x86_64 - standard builds
    {version = ">=1.4.0,<1.8.0", markers = "sys_platform == 'darwin' and platform_machine == 'x86_64'"},
    # Linux ARM64 - may have limited pre-built wheels
    {version = ">=1.3.0,<1.7.0", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'"},
    # Linux x86_64 - most stable, latest versions available
    {version = ">=1.4.0,<1.8.0", markers = "sys_platform == 'linux' and platform_machine == 'x86_64'"}
]
pygbif = "0.6.5"
validators = "0.33.0"
tabulate = "0.9.0"

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
ipykernel = "^6.29.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
